<?php

function action_example_action_info() {
  return array(
    'action_example_basic_action' => array(
      'label' => t('Action Example: A basic example action that does nothing'),
      'type' => 'system',
      'configurable' => FALSE,
      'triggers' => array('any'),
    ),
    'action_example_unblock_user_action' => array(
      'label' => t('Action Example: Unblock a user'),
      'type' => 'user',
      'configurable' => FALSE,
      'triggers' => array('any'),
    ),
    'action_example_node_sticky_action' => array(
      'type' => 'node',
      'label' => t('Action Example: Promote to frontpage and sticky on top any content created by :'),
      'configurable' => TRUE,
      'behavior' => array('changes_property'),
      'triggers' => array('node_presave', 'node_insert', 'node_update'),
    ),
  );
}

function action_example_menu() {
  $items['examples/action_example'] = array(
    'title'           => 'Action Example',
    'description'     => 'Provides a basic information page.',
    'page callback'   => '_action_example_page',
    'access callback' => TRUE,
  );
  return $items;
}

function _action_example_page() {
  return t("The Action Example provides three example actions which can be configured on the <a href='@actions_url'>Actions configuration page</a> and assigned to triggers on the <a href='@triggers_url'>Triggers configuration page</a>.", array('@actions_url' => url('admin/config/system/actions'), '@triggers_url' => url('admin/structure/trigger/node')));
}

function action_example_basic_action(&$entity, $context = array()) {
  drupal_set_message(t('action_example_basic_action fired'));
  watchdog('action_example', 'action_example_basic_action fired.');
}

function action_example_unblock_user_action(&$entity, $context = array()) {

  if (isset($entity->uid)) {
    $uid = $entity->uid;
  }
  elseif (isset($context['uid'])) {
    $uid = $context['uid'];
  }
  // If neither of those are valid, then block the current user.
  else {
    $uid = $GLOBALS['user']->uid;
  }
  $account = user_load($uid);
  $account = user_save($account, array('status' => 1));
  watchdog('action_example', 'Unblocked user %name.', array('%name' => $account->name));
  drupal_set_message(t('Unblocked user %name', array('%name' => $account->name)));
}

function action_example_node_sticky_action_form($context) {
  $form['author'] = array(
    '#title' => t('Author name'),
    '#type' => 'textfield',
    '#description' => t('Any content created, presaved or updated by this user will be promoted to front page and set as sticky.'),
    '#default_value' => isset($context['author']) ? $context['author'] : '',
  );
  
  if (user_access('access user profiles')) {
    $form['author']['#autocomplete_path'] = 'user/autocomplete';
  }
  
  return $form;
}

function action_example_node_sticky_action_validate($form, $form_state) {
  if (!$account = user_load_by_name($form_state['values']['author'])) {
    form_set_error('author', t('Please, provide a valid username'));
  }
}

function action_example_node_sticky_action_submit($form, $form_state) {
  return array('author' => $form_state['values']['author']);
}

function action_example_node_sticky_action($node, $context) {
  if (function_exists('dsm')) {
    dsm($node, 'action_example_node_sticky_action is firing. Here is the $node');
    dsm($context, 'action_example_node_sticky_action is firing. Here is the $context');
  }
  // Get the user configured for this special action.
  $account = user_load_by_name($context['author']);
  // Is the node created by this user? then promote and set as sticky.
  if ($account->uid == $node->uid) {
    $node->promote = NODE_PROMOTED;
    $node->sticky  = NODE_STICKY;
    watchdog('action',
      'Set @type %title to sticky and promoted by special action for user %username.',
        array(
          '@type' => node_type_get_name($node),
          '%title' => $node->title,
          '%username' => $account->name,
        )
    );
    drupal_set_message(
      t('Set @type %title to sticky and promoted by special action for user %username.',
        array(
          '@type' => node_type_get_name($node),
          '%title' => $node->title,
          '%username' => $account->name,
        )
      )
    );
  }
}
